syntax = "proto3";

package blockstorage;

service ServiceComm
{
    rpc Prepare(PrepareRequest) returns (PrepareReply) {}
    rpc Commit(CommitRequest) returns (CommitReply) {}
    rpc GetPendingReplicationTransactions(GetPendingReplicationTransactionsRequest) returns (GetPendingReplicationTransactionsReply) {}
    rpc Sync(stream SyncRequest) returns (stream SyncReply) {}
}

message FileData
{
    string file_name = 1;
    optional uint32 offset = 2;
    optional uint32 size = 3;
}

message TransactionId
{
    string transaction_id = 1;
}

message PrepareRequest
{
    string transationId = 1;
    string buffer = 2;
    repeated FileData file_data = 3;
}

message PrepareReply
{
    uint32 status = 1;
}

message CommitRequest
{
    string transationId = 1;
    repeated FileData file_data = 2;
}

message CommitReply
{
    uint32 status = 1;
}

message GetPendingReplicationTransactionsRequest {}

message GetPendingReplicationTransactionsReply
{
    repeated TransactionId txn = 1;
}

message SyncRequest {
    string ip = 1;
    Commands command = 2;
    enum Commands {
        STOP_WRITE = 0;
        WRITES_STATUS = 1;
        GET_WRITES = 2;
        ACK_PREV = 3;
    }
}

message SyncReply {
    uint32 error = 1;
    uint32 pending_writes = 2;
    uint32 inflight_writes = 3;
    repeated Operation ops = 4;
}

message Operation {
    string txnId = 1;
    string filePath = 2;
    string buffer = 3;
} 